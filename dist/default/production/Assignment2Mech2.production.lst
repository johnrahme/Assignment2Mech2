

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Apr 23 13:44:32 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  0088                     	;# 
    61  0089                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  001A                     _RCREG	set	26
   202  0001                     _TMR0	set	1
   203  0019                     _TXREG	set	25
   204  00C4                     _CREN	set	196
   205  005F                     _GIE	set	95
   206  00C1                     _OERR	set	193
   207  005E                     _PEIE	set	94
   208  0030                     _RB0	set	48
   209  0065                     _RCIF	set	101
   210  00C6                     _RX9	set	198
   211  00C7                     _SPEN	set	199
   212  005A                     _TMR0IF	set	90
   213  0064                     _TXIF	set	100
   214  0099                     _SPBRG	set	153
   215  0086                     _TRISB	set	134
   216  0087                     _TRISC	set	135
   217  04C2                     _BRGH	set	1218
   218  0465                     _RCIE	set	1125
   219  04C4                     _SYNC	set	1220
   220  04C6                     _TX9	set	1222
   221  04C5                     _TXEN	set	1221
   222  0464                     _TXIE	set	1124
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  0015                     start_initialization:	
   228  0015                     __initialization:	
   229                           
   230                           ; Clear objects allocated to BITCOMMON
   231  0015  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   232                           
   233                           ; Clear objects allocated to COMMON
   234  0016  01FB               	clrf	__pbssCOMMON& (0+127)
   235  0017  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   236                           
   237                           ; Clear objects allocated to BANK0
   238  0018  1383               	bcf	3,7	;select IRP bank0
   239  0019  3020               	movlw	low __pbssBANK0
   240  001A  0084               	movwf	4
   241  001B  3045               	movlw	low (__pbssBANK0+37)
   242  001C  120A  118A  21A3   	fcall	clear_ram0
   243  001F                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  001F                     __end_of__initialization:	
   247  001F  0183               	clrf	3
   248  0020  120A  118A  2992   	ljmp	_main	;jump to C main() function
   249                           
   250                           	psect	bitbssCOMMON
   251  03E8                     __pbitbssCOMMON:	
   252  03E8                     _RTC_FLAG_500MS:	
   253  03E8                     	ds	1
   254                           
   255                           	psect	bssCOMMON
   256  007B                     __pbssCOMMON:	
   257  007B                     _rxiptr:	
   258  007B                     	ds	1
   259  007C                     _txiptr:	
   260  007C                     	ds	1
   261                           
   262                           	psect	bssBANK0
   263  0020                     __pbssBANK0:	
   264  0020                     _rxfifo:	
   265  0020                     	ds	16
   266  0030                     _txfifo:	
   267  0030                     	ds	16
   268  0040                     _RTC_Counter:	
   269  0040                     	ds	2
   270  0042                     _rxoptr:	
   271  0042                     	ds	1
   272  0043                     _ser_tmp:	
   273  0043                     	ds	1
   274  0044                     _txoptr:	
   275  0044                     	ds	1
   276                           
   277                           	psect	clrtext
   278  01A3                     clear_ram0:	
   279                           ;	Called with FSR containing the base address, and
   280                           ;	W with the last address+1
   281                           
   282  01A3  0064               	clrwdt	;clear the watchdog before getting into this loop
   283  01A4                     clrloop0:	
   284  01A4  0180               	clrf	0	;clear RAM location pointed to by FSR
   285  01A5  0A84               	incf	4,f	;increment pointer
   286  01A6  0604               	xorwf	4,w	;XOR with final address
   287  01A7  1903               	btfsc	3,2	;have we reached the end yet?
   288  01A8  3400               	retlw	0	;all done for this memory range, return
   289  01A9  0604               	xorwf	4,w	;XOR again to restore value
   290  01AA  29A4               	goto	clrloop0	;do the next byte
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:	
   294  0070                     ?_ser_putch:	
   295  0070                     ?_ser_init:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_setupIRobot:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_drive:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_isr:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_setup:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?___lwmod:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ___lwmod@divisor:	
   317                           ; 2 bytes @ 0x0
   318                           
   319                           
   320                           ; 2 bytes @ 0x0
   321  0070                     	ds	2
   322  0072                     ___lwmod@dividend:	
   323                           
   324                           ; 2 bytes @ 0x2
   325  0072                     	ds	2
   326  0074                     ??___lwmod:	
   327                           
   328                           ; 1 bytes @ 0x4
   329  0074                     	ds	1
   330  0075                     ___lwmod@counter:	
   331                           
   332                           ; 1 bytes @ 0x5
   333  0075                     	ds	1
   334  0076                     ??_isr:	
   335                           
   336                           ; 1 bytes @ 0x6
   337  0076                     	ds	5
   338                           
   339                           	psect	cstackBANK0
   340  0045                     __pcstackBANK0:	
   341  0045                     ??_ser_putch:	
   342  0045                     ??_ser_init:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0045                     	ds	1
   348  0046                     ser_putch@c:	
   349                           
   350                           ; 1 bytes @ 0x1
   351  0046                     	ds	1
   352  0047                     ??_setupIRobot:	
   353  0047                     ??_drive:	
   354                           ; 1 bytes @ 0x2
   355                           
   356                           
   357                           ; 1 bytes @ 0x2
   358  0047                     	ds	2
   359  0049                     ??_setup:	
   360                           
   361                           ; 1 bytes @ 0x4
   362  0049                     	ds	3
   363  004C                     ??_main:	
   364                           
   365                           	psect	maintext
   366  0192                     __pmaintext:	
   367                           ; 1 bytes @ 0x7
   368 ;;
   369 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   370 ;;
   371 ;; *************** function _main *****************
   372 ;; Defined at:
   373 ;;		line 54 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : B00/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0
   390 ;;      Totals:         0       0       0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels required when called:    5
   393 ;; This function calls:
   394 ;;		_drive
   395 ;;		_setup
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  0192                     _main:	
   404                           
   405                           ;main.c: 55: setup();
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   409  0192  120A  118A  2158  120A  118A  	fcall	_setup
   410                           
   411                           ;main.c: 56: drive();
   412  0197  120A  118A  2087  120A  118A  	fcall	_drive
   413  019C                     l1026:	
   414                           ;main.c: 57: while(1){
   415                           
   416                           
   417                           ;main.c: 58: if(RTC_FLAG_500MS){
   418  019C  1C7D               	btfss	_RTC_FLAG_500MS/(0+8),_RTC_FLAG_500MS& (0+7)	;volatile
   419  019D  299C               	goto	l1026
   420                           
   421                           ;main.c: 59: RB0 = !RB0;
   422  019E  3001               	movlw	1
   423  019F  1283               	bcf	3,5	;RP0=0, select bank0
   424  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   425  01A1  0686               	xorwf	6,f
   426  01A2  299C               	goto	l1026
   427  01A3                     __end_of_main:	
   428                           
   429                           	psect	text1
   430  0158                     __ptext1:	
   431 ;; *************** function _setup *****************
   432 ;; Defined at:
   433 ;;		line 44 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       3       0       0       0
   450 ;;      Totals:         0       3       0       0       0
   451 ;;Total ram usage:        3 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    4
   454 ;; This function calls:
   455 ;;		_ser_init
   456 ;;		_setupIRobot
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _setup
   464  0158                     _setup:	
   465                           
   466                           ;main.c: 45: _delay((unsigned long)((5000)*(20000000/4000.0)));
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   470  0158  307F               	movlw	127
   471  0159  1283               	bcf	3,5	;RP0=0, select bank0
   472  015A  1303               	bcf	3,6	;RP1=0, select bank0
   473  015B  00CB               	movwf	??_setup+2
   474  015C  30D4               	movlw	212
   475  015D  00CA               	movwf	??_setup+1
   476  015E  30AE               	movlw	174
   477  015F  00C9               	movwf	??_setup
   478  0160                     u477:	
   479  0160  0BC9               	decfsz	??_setup,f
   480  0161  2960               	goto	u477
   481  0162  0BCA               	decfsz	??_setup+1,f
   482  0163  2960               	goto	u477
   483  0164  0BCB               	decfsz	??_setup+2,f
   484  0165  2960               	goto	u477
   485  0166  2967               	nop2
   486                           
   487                           ;main.c: 46: ser_init();
   488  0167  120A  118A  210F  120A  118A  	fcall	_ser_init
   489                           
   490                           ;main.c: 47: PEIE = 1;
   491  016C  170B               	bsf	11,6	;volatile
   492                           
   493                           ;main.c: 48: GIE = 1;
   494  016D  178B               	bsf	11,7	;volatile
   495                           
   496                           ;main.c: 49: setupIRobot();
   497  016E  120A  118A  2135   	fcall	_setupIRobot
   498                           
   499                           ;main.c: 51: TRISB = 0;
   500  0171  1683               	bsf	3,5	;RP0=1, select bank1
   501  0172  1303               	bcf	3,6	;RP1=0, select bank1
   502  0173  0186               	clrf	6	;volatile
   503  0174  0008               	return
   504  0175                     __end_of_setup:	
   505                           
   506                           	psect	text2
   507  0135                     __ptext2:	
   508 ;; *************** function _setupIRobot *****************
   509 ;; Defined at:
   510 ;;		line 4 in file "iRobot.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       2       0       0       0
   527 ;;      Totals:         0       2       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; Hardware stack levels required when called:    3
   531 ;; This function calls:
   532 ;;		_ser_putch
   533 ;; This function is called by:
   534 ;;		_setup
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _setupIRobot
   540  0135                     _setupIRobot:	
   541                           
   542                           ;iRobot.c: 5: ser_putch(128);
   543                           
   544                           ;incstack = 0
   545                           ; Regs used in _setupIRobot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   546  0135  3080               	movlw	128
   547  0136  120A  118A  2175  120A  118A  	fcall	_ser_putch
   548                           
   549                           ;iRobot.c: 6: _delay((unsigned long)((5)*(20000000/4000.0)));
   550  013B  3021               	movlw	33
   551  013C  1283               	bcf	3,5	;RP0=0, select bank0
   552  013D  1303               	bcf	3,6	;RP1=0, select bank0
   553  013E  00C8               	movwf	??_setupIRobot+1
   554  013F  3076               	movlw	118
   555  0140  00C7               	movwf	??_setupIRobot
   556  0141                     u487:	
   557  0141  0BC7               	decfsz	??_setupIRobot,f
   558  0142  2941               	goto	u487
   559  0143  0BC8               	decfsz	??_setupIRobot+1,f
   560  0144  2941               	goto	u487
   561  0145  0000               	nop
   562                           
   563                           ;iRobot.c: 7: ser_putch(132);
   564  0146  3084               	movlw	132
   565  0147  120A  118A  2175  120A  118A  	fcall	_ser_putch
   566                           
   567                           ;iRobot.c: 8: _delay((unsigned long)((5)*(20000000/4000.0)));
   568  014C  3021               	movlw	33
   569  014D  1283               	bcf	3,5	;RP0=0, select bank0
   570  014E  1303               	bcf	3,6	;RP1=0, select bank0
   571  014F  00C8               	movwf	??_setupIRobot+1
   572  0150  3076               	movlw	118
   573  0151  00C7               	movwf	??_setupIRobot
   574  0152                     u497:	
   575  0152  0BC7               	decfsz	??_setupIRobot,f
   576  0153  2952               	goto	u497
   577  0154  0BC8               	decfsz	??_setupIRobot+1,f
   578  0155  2952               	goto	u497
   579  0156  0000               	nop
   580  0157  0008               	return
   581  0158                     __end_of_setupIRobot:	
   582                           
   583                           	psect	text3
   584  010F                     __ptext3:	
   585 ;; *************** function _ser_init *****************
   586 ;; Defined at:
   587 ;;		line 111 in file "ser.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       1       0       0       0
   604 ;;      Totals:         0       1       0       0       0
   605 ;;Total ram usage:        1 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    2
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_setup
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _ser_init
   617  010F                     _ser_init:	
   618                           
   619                           ;ser.c: 113: TRISC |= 0b10000000;
   620                           
   621                           ;incstack = 0
   622                           ; Regs used in _ser_init: [wreg+status,2+status,0]
   623  010F  1683               	bsf	3,5	;RP0=1, select bank1
   624  0110  1303               	bcf	3,6	;RP1=0, select bank1
   625  0111  1787               	bsf	7,7	;volatile
   626                           
   627                           ;ser.c: 114: TRISC &= 0b10111111;
   628  0112  30BF               	movlw	191
   629  0113  1283               	bcf	3,5	;RP0=0, select bank0
   630  0114  1303               	bcf	3,6	;RP1=0, select bank0
   631  0115  00C5               	movwf	??_ser_init
   632  0116  0845               	movf	??_ser_init,w
   633  0117  1683               	bsf	3,5	;RP0=1, select bank1
   634  0118  1303               	bcf	3,6	;RP1=0, select bank1
   635  0119  0587               	andwf	7,f	;volatile
   636                           
   637                           ;ser.c: 115: BRGH=1;
   638  011A  1518               	bsf	24,2	;volatile
   639                           
   640                           ;ser.c: 117: SPBRG=20;
   641  011B  3014               	movlw	20
   642  011C  0099               	movwf	25	;volatile
   643                           
   644                           ;ser.c: 120: TX9=0;
   645  011D  1318               	bcf	24,6	;volatile
   646                           
   647                           ;ser.c: 121: RX9=0;
   648  011E  1283               	bcf	3,5	;RP0=0, select bank0
   649  011F  1303               	bcf	3,6	;RP1=0, select bank0
   650  0120  1318               	bcf	24,6	;volatile
   651                           
   652                           ;ser.c: 123: SYNC=0;
   653  0121  1683               	bsf	3,5	;RP0=1, select bank1
   654  0122  1303               	bcf	3,6	;RP1=0, select bank1
   655  0123  1218               	bcf	24,4	;volatile
   656                           
   657                           ;ser.c: 124: SPEN=1;
   658  0124  1283               	bcf	3,5	;RP0=0, select bank0
   659  0125  1303               	bcf	3,6	;RP1=0, select bank0
   660  0126  1798               	bsf	24,7	;volatile
   661                           
   662                           ;ser.c: 125: CREN=1;
   663  0127  1618               	bsf	24,4	;volatile
   664                           
   665                           ;ser.c: 126: TXIE=0;
   666  0128  1683               	bsf	3,5	;RP0=1, select bank1
   667  0129  1303               	bcf	3,6	;RP1=0, select bank1
   668  012A  120C               	bcf	12,4	;volatile
   669                           
   670                           ;ser.c: 127: RCIE=1;
   671  012B  168C               	bsf	12,5	;volatile
   672                           
   673                           ;ser.c: 128: TXEN=1;
   674  012C  1698               	bsf	24,5	;volatile
   675                           
   676                           ;ser.c: 129: PEIE=1;
   677  012D  170B               	bsf	11,6	;volatile
   678                           
   679                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
   680  012E  1283               	bcf	3,5	;RP0=0, select bank0
   681  012F  1303               	bcf	3,6	;RP1=0, select bank0
   682  0130  01C4               	clrf	_txoptr	;volatile
   683  0131  01FC               	clrf	_txiptr	;volatile
   684  0132  01C2               	clrf	_rxoptr	;volatile
   685  0133  01FB               	clrf	_rxiptr	;volatile
   686  0134  0008               	return
   687  0135                     __end_of_ser_init:	
   688                           
   689                           	psect	text4
   690  0087                     __ptext4:	
   691 ;; *************** function _drive *****************
   692 ;; Defined at:
   693 ;;		line 10 in file "iRobot.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          0       2       0       0       0
   710 ;;      Totals:         0       2       0       0       0
   711 ;;Total ram usage:        2 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    3
   714 ;; This function calls:
   715 ;;		_ser_putch
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _drive
   723  0087                     _drive:	
   724                           
   725                           ;iRobot.c: 11: ser_putch(137); _delay((unsigned long)((5)*(20000000/4000.0))); ser_putch
      +                          (0); _delay((unsigned long)((5)*(20000000/4000.0))); ser_putch(200); _delay((unsigned lo
      +                          ng)((5)*(20000000/4000.0))); ser_putch(127); _delay((unsigned long)((5)*(20000000/4000.0
      +                          )
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   729  0087  3089               	movlw	137
   730  0088  120A  118A  2175  120A  118A  	fcall	_ser_putch
   731  008D  3021               	movlw	33
   732  008E  1283               	bcf	3,5	;RP0=0, select bank0
   733  008F  1303               	bcf	3,6	;RP1=0, select bank0
   734  0090  00C8               	movwf	??_drive+1
   735  0091  3076               	movlw	118
   736  0092  00C7               	movwf	??_drive
   737  0093                     u507:	
   738  0093  0BC7               	decfsz	??_drive,f
   739  0094  2893               	goto	u507
   740  0095  0BC8               	decfsz	??_drive+1,f
   741  0096  2893               	goto	u507
   742  0097  0000               	nop
   743  0098  3000               	movlw	0
   744  0099  120A  118A  2175  120A  118A  	fcall	_ser_putch
   745  009E  3021               	movlw	33
   746  009F  1283               	bcf	3,5	;RP0=0, select bank0
   747  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   748  00A1  00C8               	movwf	??_drive+1
   749  00A2  3076               	movlw	118
   750  00A3  00C7               	movwf	??_drive
   751  00A4                     u517:	
   752  00A4  0BC7               	decfsz	??_drive,f
   753  00A5  28A4               	goto	u517
   754  00A6  0BC8               	decfsz	??_drive+1,f
   755  00A7  28A4               	goto	u517
   756  00A8  0000               	nop
   757  00A9  30C8               	movlw	200
   758  00AA  120A  118A  2175  120A  118A  	fcall	_ser_putch
   759  00AF  3021               	movlw	33
   760  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   761  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   762  00B2  00C8               	movwf	??_drive+1
   763  00B3  3076               	movlw	118
   764  00B4  00C7               	movwf	??_drive
   765  00B5                     u527:	
   766  00B5  0BC7               	decfsz	??_drive,f
   767  00B6  28B5               	goto	u527
   768  00B7  0BC8               	decfsz	??_drive+1,f
   769  00B8  28B5               	goto	u527
   770  00B9  0000               	nop
   771  00BA  307F               	movlw	127
   772  00BB  120A  118A  2175  120A  118A  	fcall	_ser_putch
   773  00C0  3021               	movlw	33
   774  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   775  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   776  00C3  00C8               	movwf	??_drive+1
   777  00C4  3076               	movlw	118
   778  00C5  00C7               	movwf	??_drive
   779  00C6                     u537:	
   780  00C6  0BC7               	decfsz	??_drive,f
   781  00C7  28C6               	goto	u537
   782  00C8  0BC8               	decfsz	??_drive+1,f
   783  00C9  28C6               	goto	u537
   784  00CA  0000               	nop
   785  00CB  30FF               	movlw	255
   786  00CC  120A  118A  2175  120A  118A  	fcall	_ser_putch
   787  00D1  3021               	movlw	33
   788  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   789  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   790  00D4  00C8               	movwf	??_drive+1
   791  00D5  3076               	movlw	118
   792  00D6  00C7               	movwf	??_drive
   793  00D7                     u547:	
   794  00D7  0BC7               	decfsz	??_drive,f
   795  00D8  28D7               	goto	u547
   796  00D9  0BC8               	decfsz	??_drive+1,f
   797  00DA  28D7               	goto	u547
   798  00DB  0000               	nop
   799  00DC  0008               	return
   800  00DD                     __end_of_drive:	
   801                           
   802                           	psect	text5
   803  0175                     __ptext5:	
   804 ;; *************** function _ser_putch *****************
   805 ;; Defined at:
   806 ;;		line 68 in file "ser.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  c               1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  c               1    1[BANK0 ] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       1       0       0       0
   822 ;;      Temps:          0       1       0       0       0
   823 ;;      Totals:         0       2       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    2
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_setupIRobot
   831 ;;		_drive
   832 ;;		_stop
   833 ;;		_ser_puts
   834 ;;		_ser_puts2
   835 ;;		_ser_puthex
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _ser_putch
   841  0175                     _ser_putch:	
   842                           
   843                           ;incstack = 0
   844                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
   845                           ;ser_putch@c stored from wreg
   846  0175  1283               	bcf	3,5	;RP0=0, select bank0
   847  0176  1303               	bcf	3,6	;RP1=0, select bank0
   848  0177  00C6               	movwf	ser_putch@c
   849  0178                     l868:	
   850                           ;ser.c: 71: continue;
   851                           
   852                           ;ser.c: 70: while (((txiptr+1) & (16-1))==txoptr)
   853                           
   854  0178  087C               	movf	_txiptr,w	;volatile
   855  0179  3E01               	addlw	1
   856  017A  390F               	andlw	15
   857  017B  0644               	xorwf	_txoptr,w	;volatile
   858  017C  1903               	skipnz
   859  017D  2978               	goto	l868
   860                           
   861                           ;ser.c: 72: GIE=0;
   862  017E  138B               	bcf	11,7	;volatile
   863                           
   864                           ;ser.c: 73: txfifo[txiptr] = c;
   865  017F  0846               	movf	ser_putch@c,w
   866  0180  00C5               	movwf	??_ser_putch
   867  0181  087C               	movf	_txiptr,w
   868  0182  3E30               	addlw	(low (_txfifo| 0))& (0+255)
   869  0183  0084               	movwf	4
   870  0184  0845               	movf	??_ser_putch,w
   871  0185  1383               	bcf	3,7	;select IRP bank0
   872  0186  0080               	movwf	0
   873                           
   874                           ;ser.c: 74: txiptr=(txiptr+1) & (16-1);
   875  0187  087C               	movf	_txiptr,w	;volatile
   876  0188  3E01               	addlw	1
   877  0189  390F               	andlw	15
   878  018A  00C5               	movwf	??_ser_putch
   879  018B  0845               	movf	??_ser_putch,w
   880  018C  00FC               	movwf	_txiptr	;volatile
   881                           
   882                           ;ser.c: 75: TXIE=1;
   883  018D  1683               	bsf	3,5	;RP0=1, select bank1
   884  018E  1303               	bcf	3,6	;RP1=0, select bank1
   885  018F  160C               	bsf	12,4	;volatile
   886                           
   887                           ;ser.c: 76: GIE=1;
   888  0190  178B               	bsf	11,7	;volatile
   889  0191  0008               	return
   890  0192                     __end_of_ser_putch:	
   891                           
   892                           	psect	text6
   893  0023                     __ptext6:	
   894 ;; *************** function _isr *****************
   895 ;; Defined at:
   896 ;;		line 25 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          5       0       0       0       0
   913 ;;      Totals:         5       0       0       0       0
   914 ;;Total ram usage:        5 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    1
   917 ;; This function calls:
   918 ;;		___lwmod
   919 ;; This function is called by:
   920 ;;		Interrupt level 1
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _isr
   926  0023                     _isr:	
   927                           
   928                           ;main.c: 28: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
      +                          =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
      +                          &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
   929  0023  1E8C               	btfss	12,5	;volatile
   930  0024  283B               	goto	i1l1000
   931  0025  081A               	movf	26,w	;volatile
   932  0026  00F6               	movwf	??_isr
   933  0027  087B               	movf	_rxiptr,w
   934  0028  3E20               	addlw	(low (_rxfifo| 0))& (0+255)
   935  0029  0084               	movwf	4
   936  002A  0876               	movf	??_isr,w
   937  002B  1383               	bcf	3,7	;select IRP bank0
   938  002C  0080               	movwf	0
   939  002D  087B               	movf	_rxiptr,w	;volatile
   940  002E  3E01               	addlw	1
   941  002F  390F               	andlw	15
   942  0030  00F6               	movwf	??_isr
   943  0031  0876               	movf	??_isr,w
   944  0032  00C3               	movwf	_ser_tmp
   945  0033  0843               	movf	_ser_tmp,w
   946  0034  0642               	xorwf	_rxoptr,w	;volatile
   947  0035  1903               	skipnz
   948  0036  283B               	goto	i1l1000
   949  0037  0843               	movf	_ser_tmp,w
   950  0038  00F6               	movwf	??_isr
   951  0039  0876               	movf	??_isr,w
   952  003A  00FB               	movwf	_rxiptr	;volatile
   953  003B                     i1l1000:	
   954  003B  1E0C               	btfss	12,4	;volatile
   955  003C  2858               	goto	i1l66
   956  003D  1683               	bsf	3,5	;RP0=1, select bank1
   957  003E  1303               	bcf	3,6	;RP1=0, select bank1
   958  003F  1E0C               	btfss	12,4	;volatile
   959  0040  2858               	goto	i1l66
   960  0041  1283               	bcf	3,5	;RP0=0, select bank0
   961  0042  1303               	bcf	3,6	;RP1=0, select bank0
   962  0043  0844               	movf	_txoptr,w
   963  0044  3E30               	addlw	(low (_txfifo| 0))& (0+255)
   964  0045  0084               	movwf	4
   965  0046  1383               	bcf	3,7	;select IRP bank0
   966  0047  0800               	movf	0,w
   967  0048  0099               	movwf	25	;volatile
   968  0049  3001               	movlw	1
   969  004A  00F6               	movwf	??_isr
   970  004B  0876               	movf	??_isr,w
   971  004C  07C4               	addwf	_txoptr,f	;volatile
   972  004D  300F               	movlw	15
   973  004E  00F6               	movwf	??_isr
   974  004F  0876               	movf	??_isr,w
   975  0050  05C4               	andwf	_txoptr,f	;volatile
   976  0051  0844               	movf	_txoptr,w	;volatile
   977  0052  067C               	xorwf	_txiptr,w	;volatile
   978  0053  1D03               	skipz
   979  0054  2858               	goto	i1l66
   980  0055  1683               	bsf	3,5	;RP0=1, select bank1
   981  0056  1303               	bcf	3,6	;RP1=0, select bank1
   982  0057  120C               	bcf	12,4	;volatile
   983  0058                     i1l66:	
   984                           
   985                           ;main.c: 31: if(TMR0IF){
   986  0058  1D0B               	btfss	11,2	;volatile
   987  0059  287A               	goto	i1l70
   988                           
   989                           ;main.c: 32: TMR0IF = 0;
   990  005A  110B               	bcf	11,2	;volatile
   991                           
   992                           ;main.c: 33: TMR0 = 100;
   993  005B  3064               	movlw	100
   994  005C  1283               	bcf	3,5	;RP0=0, select bank0
   995  005D  0081               	movwf	1	;volatile
   996                           
   997                           ;main.c: 35: RTC_Counter++;
   998  005E  3001               	movlw	1
   999  005F  07C0               	addwf	_RTC_Counter,f	;volatile
  1000  0060  1803               	skipnc
  1001  0061  0AC1               	incf	_RTC_Counter+1,f	;volatile
  1002  0062  3000               	movlw	0
  1003  0063  07C1               	addwf	_RTC_Counter+1,f	;volatile
  1004                           
  1005                           ;main.c: 37: if(RTC_Counter % 500 == 0) {
  1006  0064  30F4               	movlw	244
  1007  0065  00F0               	movwf	___lwmod@divisor
  1008  0066  3001               	movlw	1
  1009  0067  00F1               	movwf	___lwmod@divisor+1
  1010  0068  0841               	movf	_RTC_Counter+1,w	;volatile
  1011  0069  00F3               	movwf	___lwmod@dividend+1
  1012  006A  0840               	movf	_RTC_Counter,w	;volatile
  1013  006B  00F2               	movwf	___lwmod@dividend
  1014  006C  120A  118A  20DD  120A  118A  	fcall	___lwmod
  1015  0071  0870               	movf	?___lwmod,w
  1016  0072  0471               	iorwf	?___lwmod+1,w
  1017  0073  1D03               	btfss	3,2
  1018  0074  287A               	goto	i1l70
  1019                           
  1020                           ;main.c: 38: RTC_FLAG_500MS = 1;
  1021  0075  147D               	bsf	_RTC_FLAG_500MS/(0+8),_RTC_FLAG_500MS& (0+7)	;volatile
  1022                           
  1023                           ;main.c: 39: RTC_Counter = 0;
  1024  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0078  01C0               	clrf	_RTC_Counter	;volatile
  1027  0079  01C1               	clrf	_RTC_Counter+1	;volatile
  1028  007A                     i1l70:	
  1029  007A  087A               	movf	??_isr+4,w
  1030  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1031  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1032  007D  00FF               	movwf	127
  1033  007E  0879               	movf	??_isr+3,w
  1034  007F  008A               	movwf	10
  1035  0080  0878               	movf	??_isr+2,w
  1036  0081  0084               	movwf	4
  1037  0082  0E77               	swapf	(??_isr+1)^(0+-128),w
  1038  0083  0083               	movwf	3
  1039  0084  0EFE               	swapf	126,f
  1040  0085  0E7E               	swapf	126,w
  1041  0086  0009               	retfie
  1042  0087                     __end_of_isr:	
  1043                           
  1044                           	psect	intentry
  1045  0004                     __pintentry:	
  1046                           ;incstack = 0
  1047                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1048                           
  1049  0004                     interrupt_function:	
  1050  007E                     saved_w	set	btemp
  1051  0004  00FE               	movwf	btemp
  1052  0005  0E03               	swapf	3,w
  1053  0006  00F7               	movwf	??_isr+1
  1054  0007  0804               	movf	4,w
  1055  0008  00F8               	movwf	??_isr+2
  1056  0009  080A               	movf	10,w
  1057  000A  00F9               	movwf	??_isr+3
  1058  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1059  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1060  000D  087F               	movf	btemp+1,w
  1061  000E  00FA               	movwf	??_isr+4
  1062  000F  120A  118A  2823   	ljmp	_isr
  1063                           
  1064                           	psect	text7
  1065  00DD                     __ptext7:	
  1066 ;; *************** function ___lwmod *****************
  1067 ;; Defined at:
  1068 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  divisor         2    0[COMMON] unsigned int 
  1071 ;;  dividend        2    2[COMMON] unsigned int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  counter         1    5[COMMON] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2    0[COMMON] unsigned int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         4       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0
  1085 ;;      Temps:          1       0       0       0       0
  1086 ;;      Totals:         6       0       0       0       0
  1087 ;;Total ram usage:        6 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_isr
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function ___lwmod
  1098  00DD                     ___lwmod:	
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1102  00DD  0870               	movf	___lwmod@divisor,w
  1103  00DE  0471               	iorwf	___lwmod@divisor+1,w
  1104  00DF  1903               	btfsc	3,2
  1105  00E0  290A               	goto	i1l972
  1106  00E1  01F5               	clrf	___lwmod@counter
  1107  00E2  0AF5               	incf	___lwmod@counter,f
  1108  00E3                     i1l962:	
  1109  00E3  1BF1               	btfsc	___lwmod@divisor+1,7
  1110  00E4  28F1               	goto	i1l964
  1111  00E5  3001               	movlw	1
  1112  00E6                     u28_25:	
  1113  00E6  1003               	clrc
  1114  00E7  0DF0               	rlf	___lwmod@divisor,f
  1115  00E8  0DF1               	rlf	___lwmod@divisor+1,f
  1116  00E9  3EFF               	addlw	-1
  1117  00EA  1D03               	skipz
  1118  00EB  28E6               	goto	u28_25
  1119  00EC  3001               	movlw	1
  1120  00ED  00F4               	movwf	??___lwmod
  1121  00EE  0874               	movf	??___lwmod,w
  1122  00EF  07F5               	addwf	___lwmod@counter,f
  1123  00F0  28E3               	goto	i1l962
  1124  00F1                     i1l964:	
  1125  00F1  0871               	movf	___lwmod@divisor+1,w
  1126  00F2  0273               	subwf	___lwmod@dividend+1,w
  1127  00F3  1D03               	skipz
  1128  00F4  28F7               	goto	u30_25
  1129  00F5  0870               	movf	___lwmod@divisor,w
  1130  00F6  0272               	subwf	___lwmod@dividend,w
  1131  00F7                     u30_25:	
  1132  00F7  1C03               	skipc
  1133  00F8  28FF               	goto	i1l968
  1134  00F9  0870               	movf	___lwmod@divisor,w
  1135  00FA  02F2               	subwf	___lwmod@dividend,f
  1136  00FB  0871               	movf	___lwmod@divisor+1,w
  1137  00FC  1C03               	skipc
  1138  00FD  03F3               	decf	___lwmod@dividend+1,f
  1139  00FE  02F3               	subwf	___lwmod@dividend+1,f
  1140  00FF                     i1l968:	
  1141  00FF  3001               	movlw	1
  1142  0100                     u31_25:	
  1143  0100  1003               	clrc
  1144  0101  0CF1               	rrf	___lwmod@divisor+1,f
  1145  0102  0CF0               	rrf	___lwmod@divisor,f
  1146  0103  3EFF               	addlw	-1
  1147  0104  1D03               	skipz
  1148  0105  2900               	goto	u31_25
  1149  0106  3001               	movlw	1
  1150  0107  02F5               	subwf	___lwmod@counter,f
  1151  0108  1D03               	btfss	3,2
  1152  0109  28F1               	goto	i1l964
  1153  010A                     i1l972:	
  1154  010A  0873               	movf	___lwmod@dividend+1,w
  1155  010B  00F1               	movwf	?___lwmod+1
  1156  010C  0872               	movf	___lwmod@dividend,w
  1157  010D  00F0               	movwf	?___lwmod
  1158  010E  0008               	return
  1159  010F                     __end_of___lwmod:	
  1160  007E                     btemp	set	126	;btemp
  1161  007E                     wtemp	set	126
  1162  007E                     wtemp0	set	126
  1163  0080                     wtemp1	set	128
  1164  0082                     wtemp2	set	130
  1165  0084                     wtemp3	set	132
  1166  0086                     wtemp4	set	134
  1167  0088                     wtemp5	set	136
  1168  007F                     wtemp6	set	127
  1169  007E                     ttemp	set	126
  1170  007E                     ttemp0	set	126
  1171  0081                     ttemp1	set	129
  1172  0084                     ttemp2	set	132
  1173  0087                     ttemp3	set	135
  1174  007F                     ttemp4	set	127
  1175  007E                     ltemp	set	126
  1176  007E                     ltemp0	set	126
  1177  0082                     ltemp1	set	130
  1178  0086                     ltemp2	set	134
  1179  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      7      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwmod

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_setupIRobot
    _setupIRobot->_ser_putch
    _drive->_ser_putch

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      44
                              _drive
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0      22
                                              4 BANK0      3     3      0
                           _ser_init
                        _setupIRobot
 ---------------------------------------------------------------------------------
 (2) _setupIRobot                                          2     2      0      22
                                              2 BANK0      2     2      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (2) _ser_init                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _drive                                                2     2      0      22
                                              2 BANK0      2     2      0
                          _ser_putch
 ---------------------------------------------------------------------------------
 (3) _ser_putch                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     265
                                              6 COMMON     5     5      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _drive
     _ser_putch
   _setup
     _ser_init
     _setupIRobot
       _ser_putch

 _isr (ROOT)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Apr 23 13:44:32 2016

            __CFG_CP$OFF 0000                       fsr 0004                      l868 0178  
                    _GIE 005F                      _RB0 0030             __CFG_CPD$OFF 0000  
                    u507 0093                      u517 00A4                      u527 00B5  
                    u537 00C6                      u547 00D7                      u477 0160  
                    u487 0141                      u497 0152                      _RX9 00C6  
                    _TX9 04C6                      _isr 0023                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   l1026 019C                     ?_isr 0070                     _BRGH 04C2  
                   _CREN 00C4                     _PEIE 005E                     _RCIE 0465  
                   _RCIF 0065                     i1l70 007A                     i1l66 0058  
                   _OERR 00C1                     _TMR0 0001                     _SPEN 00C7  
                   _TXIE 0464                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4             __CFG_WRT$OFF 0000                     _main 0192  
                   btemp 007E                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E                    ??_isr 0076  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___lwmod 010F  
                  i1l962 00E3                    i1l964 00F1                    i1l972 010A  
                  i1l968 00FF                    _RCREG 001A                    u30_25 00F7  
                  u31_25 0100                    _SPBRG 0099                    u28_25 00E6  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _drive 0087                    _setup 0158           __pbitbssCOMMON 03E8  
         __CFG_BOREN$OFF 0000                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 01A3  
                 ??_main 004C                   ?_drive 0070                   ?_setup 0070  
                 i1l1000 003B                   _TMR0IF 005A           __CFG_PWRTE$OFF 0000  
              ??___lwmod 0074                   _rxfifo 0020                   _txfifo 0030  
                 _rxiptr 007B                   _rxoptr 0042                   _txiptr 007C  
                 _txoptr 0044         __end_of_ser_init 0135             ?_setupIRobot 0070  
                 saved_w 007E  __end_of__initialization 001F           __pcstackCOMMON 0070  
          __end_of_drive 00DD            __end_of_setup 0175                  ??_drive 0047  
                ??_setup 0049               __pbssBANK0 0020               __pmaintext 0192  
             __pintentry 0004       __size_of_ser_putch 001D                ?_ser_init 0070  
                ___lwmod 00DD                  __ptext1 0158                  __ptext2 0135  
                __ptext3 010F                  __ptext4 0087                  __ptext5 0175  
                __ptext6 0023                  __ptext7 00DD             __size_of_isr 0064  
                _ser_tmp 0043     __size_of_setupIRobot 0023                  clrloop0 01A4  
   end_of_initialization 001F        __end_of_ser_putch 0192               ??_ser_init 0045  
    start_initialization 0015              __end_of_isr 0087           _RTC_FLAG_500MS 03E8  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0045  
      __size_of_ser_init 0026                 ?___lwmod 0070           __size_of_drive 0056  
         __size_of_setup 001D        interrupt_function 0004               ser_putch@c 0046  
              clear_ram0 01A3                _ser_putch 0175            ??_setupIRobot 0047  
             ?_ser_putch 0070         __size_of___lwmod 0032      __end_of_setupIRobot 0158  
          __size_of_main 0011                 _ser_init 010F                 intlevel1 0000  
       ___lwmod@dividend 0072              ??_ser_putch 0045          ___lwmod@divisor 0070  
        ___lwmod@counter 0075              _setupIRobot 0135              _RTC_Counter 0040  
