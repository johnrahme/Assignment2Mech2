

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Mar 27 19:01:17 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  0001                     _TMR0	set	1
    76  005F                     _GIE	set	95
    77  0030                     _RB0	set	48
    78  0031                     _RB1	set	49
    79  0032                     _RB2	set	50
    80  0033                     _RB3	set	51
    81  0034                     _RB4	set	52
    82  005A                     _T0IF	set	90
    83  005D                     _TMR0IE	set	93
    84  0086                     _TRISB	set	134
    85  0408                     _PS0	set	1032
    86  0409                     _PS1	set	1033
    87  040A                     _PS2	set	1034
    88  040B                     _PSA	set	1035
    89  040D                     _T0CS	set	1037
    90  040C                     _T0SE	set	1036
    91                           
    92                           ; #config settings
    93  0000                     
    94                           	psect	cinit
    95  0015                     start_initialization:	
    96  0015                     __initialization:	
    97                           
    98                           ; Clear objects allocated to BITCOMMON
    99  0015  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   100                           
   101                           ; Clear objects allocated to COMMON
   102  0016  01FA               	clrf	__pbssCOMMON& (0+127)
   103  0017  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   104  0018                     end_of_initialization:	
   105                           ;End of C runtime variable initialization code
   106                           
   107  0018                     __end_of__initialization:	
   108  0018  0183               	clrf	3
   109  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   110                           
   111                           	psect	bitbssCOMMON
   112  03E0                     __pbitbssCOMMON:	
   113  03E0                     _RTC_FLAG_250MS:	
   114  03E0                     	ds	1
   115                           
   116                           	psect	bssCOMMON
   117  007A                     __pbssCOMMON:	
   118  007A                     _rtcCounter:	
   119  007A                     	ds	2
   120                           
   121                           	psect	cstackCOMMON
   122  0070                     __pcstackCOMMON:	
   123  0070                     ?_isr:	
   124  0070                     ?_initialise:	
   125                           ; 1 bytes @ 0x0
   126                           
   127  0070                     ?_main:	
   128                           ; 1 bytes @ 0x0
   129                           
   130  0070                     ?___lwmod:	
   131                           ; 1 bytes @ 0x0
   132                           
   133  0070                     ___lwmod@divisor:	
   134                           ; 2 bytes @ 0x0
   135                           
   136                           
   137                           ; 2 bytes @ 0x0
   138  0070                     	ds	2
   139  0072                     ___lwmod@dividend:	
   140                           
   141                           ; 2 bytes @ 0x2
   142  0072                     	ds	2
   143  0074                     ??___lwmod:	
   144                           
   145                           ; 1 bytes @ 0x4
   146  0074                     	ds	1
   147  0075                     ___lwmod@counter:	
   148                           
   149                           ; 1 bytes @ 0x5
   150  0075                     	ds	1
   151  0076                     ??_isr:	
   152                           
   153                           ; 1 bytes @ 0x6
   154  0076                     	ds	4
   155                           
   156                           	psect	cstackBANK0
   157  0020                     __pcstackBANK0:	
   158  0020                     ??_initialise:	
   159  0020                     ??_main:	
   160                           ; 1 bytes @ 0x0
   161                           
   162                           
   163                           ; 1 bytes @ 0x0
   164  0020                     	ds	1
   165  0021                     main@coolDown:	
   166                           
   167                           ; 2 bytes @ 0x1
   168  0021                     	ds	2
   169  0023                     main@count:	
   170                           
   171                           ; 1 bytes @ 0x3
   172  0023                     	ds	1
   173                           
   174                           	psect	maintext
   175  001C                     __pmaintext:	
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 42 in file "main.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;  coolDown        2    1[BANK0 ] int 
   186 ;;  count           1    3[BANK0 ] unsigned char 
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : B00/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   196 ;;      Params:         0       0       0       0       0
   197 ;;      Locals:         0       3       0       0       0
   198 ;;      Temps:          0       1       0       0       0
   199 ;;      Totals:         0       4       0       0       0
   200 ;;Total ram usage:        4 bytes
   201 ;; Hardware stack levels required when called:    3
   202 ;; This function calls:
   203 ;;		_initialise
   204 ;; This function is called by:
   205 ;;		Startup code after reset
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           
   210                           ;psect for function _main
   211  001C                     _main:	
   212                           
   213                           ;main.c: 44: char count = 0;
   214                           
   215                           ;incstack = 0
   216                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   217  001C  1283               	bcf	3,5	;RP0=0, select bank0
   218  001D  1303               	bcf	3,6	;RP1=0, select bank0
   219  001E  01A3               	clrf	main@count
   220                           
   221                           ;main.c: 45: int coolDown = 0;
   222  001F  01A1               	clrf	main@coolDown
   223  0020  01A2               	clrf	main@coolDown+1
   224                           
   225                           ;main.c: 46: initialise();
   226  0021  120A  118A  20B4  120A  118A  	fcall	_initialise
   227  0026                     l659:	
   228                           ;main.c: 47: while(1){
   229                           
   230                           
   231                           ;main.c: 48: if(RB4 == 0&&!coolDown){
   232  0026  1283               	bcf	3,5	;RP0=0, select bank0
   233  0027  1303               	bcf	3,6	;RP1=0, select bank0
   234  0028  1A06               	btfsc	6,4	;volatile
   235  0029  2834               	goto	l665
   236  002A  0821               	movf	main@coolDown,w
   237  002B  0422               	iorwf	main@coolDown+1,w
   238  002C  1D03               	btfss	3,2
   239  002D  2834               	goto	l665
   240                           
   241                           ;main.c: 49: RB3 = !RB3;
   242  002E  3008               	movlw	8
   243  002F  0686               	xorwf	6,f
   244                           
   245                           ;main.c: 50: coolDown = 1;
   246  0030  3001               	movlw	1
   247  0031  00A1               	movwf	main@coolDown
   248  0032  3000               	movlw	0
   249  0033  00A2               	movwf	main@coolDown+1
   250  0034                     l665:	
   251                           
   252                           ;main.c: 52: }
   253                           ;main.c: 53: if(RTC_FLAG_250MS){
   254  0034  1C7C               	btfss	_RTC_FLAG_250MS/(0+8),_RTC_FLAG_250MS& (0+7)	;volatile
   255  0035  2826               	goto	l659
   256                           
   257                           ;main.c: 54: coolDown = 0;
   258  0036  01A1               	clrf	main@coolDown
   259  0037  01A2               	clrf	main@coolDown+1
   260                           
   261                           ;main.c: 55: count++;
   262  0038  3001               	movlw	1
   263  0039  00A0               	movwf	??_main
   264  003A  0820               	movf	??_main,w
   265  003B  07A3               	addwf	main@count,f
   266                           
   267                           ;main.c: 56: switch(count){
   268  003C  2849               	goto	l675
   269  003D                     l51:	
   270                           ;main.c: 57: case 1:
   271                           
   272                           
   273                           ;main.c: 58: RB0 = 0;
   274  003D  1006               	bcf	6,0	;volatile
   275                           
   276                           ;main.c: 59: RB1 = 1;
   277  003E  1486               	bsf	6,1	;volatile
   278  003F  2842               	goto	L1
   279  0040                     l53:	
   280                           ;main.c: 62: case 2:
   281                           
   282                           ;main.c: 61: break;
   283                           
   284                           ;main.c: 60: RB2 = 1;
   285                           
   286                           
   287                           ;main.c: 63: RB0 = 1;
   288  0040  1406               	bsf	6,0	;volatile
   289                           
   290                           ;main.c: 64: RB1 = 0;
   291  0041  1086               	bcf	6,1	;volatile
   292  0042                     L1:	
   293                           
   294                           ;main.c: 65: RB2 = 1;
   295  0042  1506               	bsf	6,2	;volatile
   296                           
   297                           ;main.c: 66: break;
   298  0043  2854               	goto	l52
   299  0044                     l54:	
   300                           ;main.c: 67: case 3:
   301                           
   302                           
   303                           ;main.c: 68: RB0 = 1;
   304  0044  1406               	bsf	6,0	;volatile
   305                           
   306                           ;main.c: 69: RB1 = 1;
   307  0045  1486               	bsf	6,1	;volatile
   308                           
   309                           ;main.c: 70: RB2 = 0;
   310  0046  1106               	bcf	6,2	;volatile
   311                           
   312                           ;main.c: 71: count = 0;
   313  0047  01A3               	clrf	main@count
   314                           
   315                           ;main.c: 73: }
   316                           
   317                           ;main.c: 72: break;
   318  0048  2854               	goto	l52
   319  0049                     l675:	
   320  0049  0823               	movf	main@count,w
   321                           
   322                           ; Switch size 1, requested type "space"
   323                           ; Number of cases is 3, Range of values is 1 to 3
   324                           ; switch strategies available:
   325                           ; Name         Instructions Cycles
   326                           ; simple_byte           10     6 (average)
   327                           ; direct_byte           20    11 (fixed)
   328                           ; jumptable            263     9 (fixed)
   329                           ;	Chosen strategy is simple_byte
   330  004A  3A01               	xorlw	1	; case 1
   331  004B  1903               	skipnz
   332  004C  283D               	goto	l51
   333  004D  3A03               	xorlw	3	; case 2
   334  004E  1903               	skipnz
   335  004F  2840               	goto	l53
   336  0050  3A01               	xorlw	1	; case 3
   337  0051  1903               	skipnz
   338  0052  2844               	goto	l54
   339  0053  2854               	goto	l52
   340  0054                     l52:	
   341                           
   342                           ;main.c: 74: RTC_FLAG_250MS = 0;
   343  0054  107C               	bcf	_RTC_FLAG_250MS/(0+8),_RTC_FLAG_250MS& (0+7)	;volatile
   344  0055  2826               	goto	l659
   345  0056                     __end_of_main:	
   346                           
   347                           	psect	text1
   348  00B4                     __ptext1:	
   349 ;; *************** function _initialise *****************
   350 ;; Defined at:
   351 ;;		line 23 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _initialise
   381  00B4                     _initialise:	
   382                           
   383                           ;main.c: 26: TRISB = 0b11110000;
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _initialise: [wreg]
   387  00B4  30F0               	movlw	240
   388  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   389  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   390  00B7  0086               	movwf	6	;volatile
   391                           
   392                           ;main.c: 27: RB0 = 1;
   393  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   394  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   395  00BA  1406               	bsf	6,0	;volatile
   396                           
   397                           ;main.c: 28: RB1 = 1;
   398  00BB  1486               	bsf	6,1	;volatile
   399                           
   400                           ;main.c: 29: RB2 = 1;
   401  00BC  1506               	bsf	6,2	;volatile
   402                           
   403                           ;main.c: 31: TMR0 = 100;
   404  00BD  3064               	movlw	100
   405  00BE  0081               	movwf	1	;volatile
   406                           
   407                           ;main.c: 32: T0CS = 0;
   408  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   409  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   410  00C1  1281               	bcf	1,5	;volatile
   411                           
   412                           ;main.c: 33: T0SE = 0;
   413  00C2  1201               	bcf	1,4	;volatile
   414                           
   415                           ;main.c: 34: PSA = 0;
   416  00C3  1181               	bcf	1,3	;volatile
   417                           
   418                           ;main.c: 35: PS0 = 0;
   419  00C4  1001               	bcf	1,0	;volatile
   420                           
   421                           ;main.c: 36: PS1 = 0;
   422  00C5  1081               	bcf	1,1	;volatile
   423                           
   424                           ;main.c: 37: PS2 = 1;
   425  00C6  1501               	bsf	1,2	;volatile
   426                           
   427                           ;main.c: 39: TMR0IE = 1;
   428  00C7  168B               	bsf	11,5	;volatile
   429                           
   430                           ;main.c: 40: (GIE = 1);
   431  00C8  178B               	bsf	11,7	;volatile
   432  00C9  0008               	return
   433  00CA                     __end_of_initialise:	
   434                           
   435                           	psect	text2
   436  0088                     __ptext2:	
   437 ;; *************** function _isr *****************
   438 ;; Defined at:
   439 ;;		line 10 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          4       0       0       0       0
   456 ;;      Totals:         4       0       0       0       0
   457 ;;Total ram usage:        4 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    1
   460 ;; This function calls:
   461 ;;		___lwmod
   462 ;; This function is called by:
   463 ;;		Interrupt level 1
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _isr
   469  0088                     _isr:	
   470                           
   471                           ;main.c: 11: if (T0IF){
   472  0088  1D0B               	btfss	11,2	;volatile
   473  0089  28A7               	goto	i1l41
   474                           
   475                           ;main.c: 12: T0IF = 0;
   476  008A  110B               	bcf	11,2	;volatile
   477                           
   478                           ;main.c: 13: TMR0 = 100;
   479  008B  3064               	movlw	100
   480  008C  0081               	movwf	1	;volatile
   481                           
   482                           ;main.c: 14: rtcCounter++;
   483  008D  3001               	movlw	1
   484  008E  07FA               	addwf	_rtcCounter,f	;volatile
   485  008F  1803               	skipnc
   486  0090  0AFB               	incf	_rtcCounter+1,f	;volatile
   487  0091  3000               	movlw	0
   488  0092  07FB               	addwf	_rtcCounter+1,f	;volatile
   489                           
   490                           ;main.c: 17: if(rtcCounter%250 == 0) {
   491  0093  30FA               	movlw	250
   492  0094  00F0               	movwf	___lwmod@divisor
   493  0095  3000               	movlw	0
   494  0096  00F1               	movwf	___lwmod@divisor+1
   495  0097  087B               	movf	_rtcCounter+1,w	;volatile
   496  0098  00F3               	movwf	___lwmod@dividend+1
   497  0099  087A               	movf	_rtcCounter,w	;volatile
   498  009A  00F2               	movwf	___lwmod@dividend
   499  009B  120A  118A  2056  120A  118A  	fcall	___lwmod
   500  00A0  0870               	movf	?___lwmod,w
   501  00A1  0471               	iorwf	?___lwmod+1,w
   502  00A2  1D03               	btfss	3,2
   503  00A3  28A7               	goto	i1l41
   504                           
   505                           ;main.c: 18: rtcCounter = 0;
   506  00A4  01FA               	clrf	_rtcCounter	;volatile
   507  00A5  01FB               	clrf	_rtcCounter+1	;volatile
   508                           
   509                           ;main.c: 19: RTC_FLAG_250MS = 1;
   510  00A6  147C               	bsf	_RTC_FLAG_250MS/(0+8),_RTC_FLAG_250MS& (0+7)	;volatile
   511  00A7                     i1l41:	
   512  00A7  0879               	movf	??_isr+3,w
   513  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   514  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   515  00AA  00FF               	movwf	127
   516  00AB  0878               	movf	??_isr+2,w
   517  00AC  008A               	movwf	10
   518  00AD  0877               	movf	??_isr+1,w
   519  00AE  0084               	movwf	4
   520  00AF  0E76               	swapf	??_isr^(0+-128),w
   521  00B0  0083               	movwf	3
   522  00B1  0EFE               	swapf	126,f
   523  00B2  0E7E               	swapf	126,w
   524  00B3  0009               	retfie
   525  00B4                     __end_of_isr:	
   526                           
   527                           	psect	intentry
   528  0004                     __pintentry:	
   529                           ;incstack = 0
   530                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532  0004                     interrupt_function:	
   533  007E                     saved_w	set	btemp
   534  0004  00FE               	movwf	btemp
   535  0005  0E03               	swapf	3,w
   536  0006  00F6               	movwf	??_isr
   537  0007  0804               	movf	4,w
   538  0008  00F7               	movwf	??_isr+1
   539  0009  080A               	movf	10,w
   540  000A  00F8               	movwf	??_isr+2
   541  000B  1283               	bcf	3,5	;RP0=0, select bank0
   542  000C  1303               	bcf	3,6	;RP1=0, select bank0
   543  000D  087F               	movf	btemp+1,w
   544  000E  00F9               	movwf	??_isr+3
   545  000F  120A  118A  2888   	ljmp	_isr
   546                           
   547                           	psect	text3
   548  0056                     __ptext3:	
   549 ;; *************** function ___lwmod *****************
   550 ;; Defined at:
   551 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  divisor         2    0[COMMON] unsigned int 
   554 ;;  dividend        2    2[COMMON] unsigned int 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  counter         1    5[COMMON] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  2    0[COMMON] unsigned int 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         4       0       0       0       0
   567 ;;      Locals:         1       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0
   569 ;;      Totals:         6       0       0       0       0
   570 ;;Total ram usage:        6 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_isr
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function ___lwmod
   581  0056                     ___lwmod:	
   582                           
   583                           ;incstack = 0
   584                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   585  0056  0870               	movf	___lwmod@divisor,w
   586  0057  0471               	iorwf	___lwmod@divisor+1,w
   587  0058  1903               	btfsc	3,2
   588  0059  2883               	goto	i1l639
   589  005A  01F5               	clrf	___lwmod@counter
   590  005B  0AF5               	incf	___lwmod@counter,f
   591  005C                     i1l629:	
   592  005C  1BF1               	btfsc	___lwmod@divisor+1,7
   593  005D  286A               	goto	i1l631
   594  005E  3001               	movlw	1
   595  005F                     u13_25:	
   596  005F  1003               	clrc
   597  0060  0DF0               	rlf	___lwmod@divisor,f
   598  0061  0DF1               	rlf	___lwmod@divisor+1,f
   599  0062  3EFF               	addlw	-1
   600  0063  1D03               	skipz
   601  0064  285F               	goto	u13_25
   602  0065  3001               	movlw	1
   603  0066  00F4               	movwf	??___lwmod
   604  0067  0874               	movf	??___lwmod,w
   605  0068  07F5               	addwf	___lwmod@counter,f
   606  0069  285C               	goto	i1l629
   607  006A                     i1l631:	
   608  006A  0871               	movf	___lwmod@divisor+1,w
   609  006B  0273               	subwf	___lwmod@dividend+1,w
   610  006C  1D03               	skipz
   611  006D  2870               	goto	u15_25
   612  006E  0870               	movf	___lwmod@divisor,w
   613  006F  0272               	subwf	___lwmod@dividend,w
   614  0070                     u15_25:	
   615  0070  1C03               	skipc
   616  0071  2878               	goto	i1l635
   617  0072  0870               	movf	___lwmod@divisor,w
   618  0073  02F2               	subwf	___lwmod@dividend,f
   619  0074  0871               	movf	___lwmod@divisor+1,w
   620  0075  1C03               	skipc
   621  0076  03F3               	decf	___lwmod@dividend+1,f
   622  0077  02F3               	subwf	___lwmod@dividend+1,f
   623  0078                     i1l635:	
   624  0078  3001               	movlw	1
   625  0079                     u16_25:	
   626  0079  1003               	clrc
   627  007A  0CF1               	rrf	___lwmod@divisor+1,f
   628  007B  0CF0               	rrf	___lwmod@divisor,f
   629  007C  3EFF               	addlw	-1
   630  007D  1D03               	skipz
   631  007E  2879               	goto	u16_25
   632  007F  3001               	movlw	1
   633  0080  02F5               	subwf	___lwmod@counter,f
   634  0081  1D03               	btfss	3,2
   635  0082  286A               	goto	i1l631
   636  0083                     i1l639:	
   637  0083  0873               	movf	___lwmod@dividend+1,w
   638  0084  00F1               	movwf	?___lwmod+1
   639  0085  0872               	movf	___lwmod@dividend,w
   640  0086  00F0               	movwf	?___lwmod
   641  0087  0008               	return
   642  0088                     __end_of___lwmod:	
   643  007E                     btemp	set	126	;btemp
   644  007E                     wtemp	set	126
   645  007E                     wtemp0	set	126
   646  0080                     wtemp1	set	128
   647  0082                     wtemp2	set	130
   648  0084                     wtemp3	set	132
   649  0086                     wtemp4	set	134
   650  0088                     wtemp5	set	136
   651  007F                     wtemp6	set	127
   652  007E                     ttemp	set	126
   653  007E                     ttemp0	set	126
   654  0081                     ttemp1	set	129
   655  0084                     ttemp2	set	132
   656  0087                     ttemp3	set	135
   657  007F                     ttemp4	set	127
   658  007E                     ltemp	set	126
   659  007E                     ltemp0	set	126
   660  0082                     ltemp1	set	130
   661  0086                     ltemp2	set	134
   662  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      50
                                              0 BANK0      4     4      0
                         _initialise
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     265
                                              6 COMMON     4     4      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialise

 _isr (ROOT)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Mar 27 19:01:17 2016

            __CFG_CP$OFF 0000                       l51 003D                       l52 0054  
                     l53 0040                       l54 0044                      l665 0034  
                    l675 0049                      l659 0026                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _PS0 0408  
                    _PS1 0409                      _PS2 040A             __CFG_CPD$OFF 0000  
                    _PSA 040B                      _isr 0088                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   _T0IF 005A                     _T0CS 040D                     _T0SE 040C  
                   i1l41 00A7                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 001C                     btemp 007E                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_isr 0076             main@coolDown 0021                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___lwmod 0088                    i1l631 006A  
                  i1l635 0078                    i1l629 005C                    i1l639 0083  
                  u13_25 005F                    u15_25 0070                    u16_25 0079  
                  _TRISB 0086           __pbitbssCOMMON 03E0           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0056                   ??_main 0020  
                 _TMR0IE 005D           __CFG_PWRTE$OFF 0000                ??___lwmod 0074  
                 saved_w 007E  __end_of__initialization 0018           __pcstackCOMMON 0070  
             __pmaintext 001C               __pintentry 0004                  ___lwmod 0056  
             _initialise 00B4                  __ptext1 00B4                  __ptext2 0088  
                __ptext3 0056             __size_of_isr 002C     end_of_initialization 0018  
             _rtcCounter 007A              ?_initialise 0070      start_initialization 0015  
            __end_of_isr 00B4           _RTC_FLAG_250MS 03E0              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020      __size_of_initialise 0016  
               ?___lwmod 0070        interrupt_function 0004                main@count 0023  
       __size_of___lwmod 0032             ??_initialise 0020            __size_of_main 003A  
     __end_of_initialise 00CA                 intlevel1 0000         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0075  
