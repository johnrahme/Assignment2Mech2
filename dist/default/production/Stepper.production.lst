

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Mar 29 15:52:17 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  0007                     _PORTC	set	7
    75  0001                     _TMR0	set	1
    76  005F                     _GIE	set	95
    77  0030                     _RB0	set	48
    78  0031                     _RB1	set	49
    79  0032                     _RB2	set	50
    80  0033                     _RB3	set	51
    81  005A                     _T0IF	set	90
    82  005D                     _TMR0IE	set	93
    83  0086                     _TRISB	set	134
    84  0087                     _TRISC	set	135
    85  0408                     _PS0	set	1032
    86  0409                     _PS1	set	1033
    87  040A                     _PS2	set	1034
    88  040B                     _PSA	set	1035
    89  040D                     _T0CS	set	1037
    90  040C                     _T0SE	set	1036
    91                           
    92                           ; #config settings
    93  0000                     
    94                           	psect	cinit
    95  0015                     start_initialization:	
    96  0015                     __initialization:	
    97                           
    98                           ; Clear objects allocated to BITCOMMON
    99  0015  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   100                           
   101                           ; Clear objects allocated to COMMON
   102  0016  01FA               	clrf	__pbssCOMMON& (0+127)
   103  0017  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   104  0018  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   105  0019                     end_of_initialization:	
   106                           ;End of C runtime variable initialization code
   107                           
   108  0019                     __end_of__initialization:	
   109  0019  0183               	clrf	3
   110  001A  120A  118A  289A   	ljmp	_main	;jump to C main() function
   111                           
   112                           	psect	bitbssCOMMON
   113  03C8                     __pbitbssCOMMON:	
   114  03C8                     _pb0Pressed:	
   115  03C8                     	ds	1
   116  03C9                     _pb0Released:	
   117  03C9                     	ds	1
   118  03CA                     _pb1Pressed:	
   119  03CA                     	ds	1
   120  03CB                     _pb1Released:	
   121  03CB                     	ds	1
   122                           
   123                           	psect	bssCOMMON
   124  007A                     __pbssCOMMON:	
   125  007A                     _cstep:	
   126  007A                     	ds	1
   127  007B                     _rtcCounter:	
   128  007B                     	ds	1
   129  007C                     _rtcCounter2:	
   130  007C                     	ds	1
   131                           
   132                           	psect	cstackCOMMON
   133  0070                     __pcstackCOMMON:	
   134  0070                     ?_isr:	
   135  0070                     ??_isr:	
   136                           ; 1 bytes @ 0x0
   137                           
   138  0070                     ?_initialise:	
   139                           ; 1 bytes @ 0x0
   140                           
   141  0070                     ?_move:	
   142                           ; 1 bytes @ 0x0
   143                           
   144  0070                     ?_main:	
   145                           ; 1 bytes @ 0x0
   146                           
   147                           
   148                           ; 1 bytes @ 0x0
   149  0070                     	ds	5
   150  0075                     ??_initialise:	
   151  0075                     ??_move:	
   152                           ; 1 bytes @ 0x5
   153                           
   154                           
   155                           ; 1 bytes @ 0x5
   156  0075                     	ds	2
   157  0077                     move@steps:	
   158                           
   159                           ; 1 bytes @ 0x7
   160  0077                     	ds	1
   161  0078                     move@i:	
   162                           
   163                           ; 1 bytes @ 0x8
   164  0078                     	ds	1
   165  0079                     ??_main:	
   166                           
   167                           	psect	maintext
   168  009A                     __pmaintext:	
   169                           ; 1 bytes @ 0x9
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 121 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   184 ;; Tracked objects:
   185 ;;		On entry : B00/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   189 ;;      Params:         0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called:    2
   195 ;; This function calls:
   196 ;;		_initialise
   197 ;;		_move
   198 ;; This function is called by:
   199 ;;		Startup code after reset
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           
   204                           ;psect for function _main
   205  009A                     _main:	
   206                           
   207                           ;main.c: 123: initialise();
   208                           
   209                           ;incstack = 0
   210                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   211  009A  120A  118A  20BA  120A  118A  	fcall	_initialise
   212  009F                     l656:	
   213                           ;main.c: 125: while(1){
   214                           
   215                           
   216                           ;main.c: 126: if(pb0Pressed){
   217  009F  1C79               	btfss	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   218  00A0  28AC               	goto	l664
   219                           
   220                           ;main.c: 127: RB0 = !RB0;
   221  00A1  3001               	movlw	1
   222  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   223  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   224  00A4  0686               	xorwf	6,f
   225                           
   226                           ;main.c: 128: move(20);
   227  00A5  3014               	movlw	20
   228  00A6  120A  118A  201D  120A  118A  	fcall	_move
   229                           
   230                           ;main.c: 129: pb0Pressed = 0;
   231  00AB  1079               	bcf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   232  00AC                     l664:	
   233                           
   234                           ;main.c: 130: }
   235                           ;main.c: 131: if(pb1Pressed){
   236  00AC  1D79               	btfss	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   237  00AD  289F               	goto	l656
   238                           
   239                           ;main.c: 132: RB2 = !RB2;
   240  00AE  3004               	movlw	4
   241  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   242  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   243  00B1  0686               	xorwf	6,f
   244                           
   245                           ;main.c: 133: move(40);
   246  00B2  3028               	movlw	40
   247  00B3  120A  118A  201D  120A  118A  	fcall	_move
   248                           
   249                           ;main.c: 134: pb1Pressed = 0;
   250  00B8  1179               	bcf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   251  00B9  289F               	goto	l656
   252  00BA                     __end_of_main:	
   253                           
   254                           	psect	text1
   255  001D                     __ptext1:	
   256 ;; *************** function _move *****************
   257 ;; Defined at:
   258 ;;		line 85 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;  steps           1    wreg     unsigned char 
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  steps           1    7[COMMON] unsigned char 
   263 ;;  i               1    8[COMMON] unsigned char 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   273 ;;      Params:         0       0       0       0       0
   274 ;;      Locals:         2       0       0       0       0
   275 ;;      Temps:          2       0       0       0       0
   276 ;;      Totals:         4       0       0       0       0
   277 ;;Total ram usage:        4 bytes
   278 ;; Hardware stack levels used:    1
   279 ;; Hardware stack levels required when called:    1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _move
   289  001D                     _move:	
   290                           
   291                           ;incstack = 0
   292                           ; Regs used in _move: [wreg-fsr0h+status,2+status,0]
   293                           ;move@steps stored from wreg
   294  001D  00F7               	movwf	move@steps
   295                           
   296                           ;main.c: 86: for(char i = 0; i<steps; i++){
   297  001E  01F8               	clrf	move@i
   298  001F  284B               	goto	l618
   299  0020                     l576:	
   300                           ;main.c: 88: case 0: PORTC = 0b00101110;
   301                           
   302                           ;main.c: 87: switch(cstep){
   303                           
   304  0020  302E               	movlw	46
   305  0021  282D               	goto	L1
   306  0022                     l580:	
   307                           ;main.c: 91: case 1: PORTC = 0b00101011;
   308                           
   309                           ;main.c: 90: break;
   310                           
   311                           ;main.c: 89: cstep++;
   312                           
   313  0022  302B               	movlw	43
   314  0023  282D               	goto	L1
   315  0024                     l584:	
   316                           ;main.c: 94: case 2: PORTC = 0b00100111;
   317                           
   318                           ;main.c: 93: break;
   319                           
   320                           ;main.c: 92: cstep++;
   321                           
   322  0024  3027               	movlw	39
   323  0025  282D               	goto	L1
   324  0026                     l588:	
   325                           ;main.c: 97: case 3: PORTC = 0b00110101;
   326                           
   327                           ;main.c: 96: break;
   328                           
   329                           ;main.c: 95: cstep++;
   330                           
   331  0026  3035               	movlw	53
   332  0027  282D               	goto	L1
   333  0028                     l592:	
   334                           ;main.c: 100: case 4: PORTC = 0b00010111;
   335                           
   336                           ;main.c: 99: break;
   337                           
   338                           ;main.c: 98: cstep++;
   339                           
   340  0028  3017               	movlw	23
   341  0029  282D               	goto	L1
   342  002A                     l596:	
   343                           ;main.c: 103: case 5: PORTC = 0b00011011;
   344                           
   345                           ;main.c: 102: break;
   346                           
   347                           ;main.c: 101: cstep++;
   348                           
   349  002A  301B               	movlw	27
   350  002B  282D               	goto	L1
   351  002C                     l600:	
   352                           ;main.c: 106: case 6: PORTC = 0b00011110;
   353                           
   354                           ;main.c: 105: break;
   355                           
   356                           ;main.c: 104: cstep++;
   357                           
   358  002C  301E               	movlw	30
   359  002D                     L1:	
   360  002D  1283               	bcf	3,5	;RP0=0, select bank0
   361  002E  1303               	bcf	3,6	;RP1=0, select bank0
   362  002F  0087               	movwf	7	;volatile
   363                           
   364                           ;main.c: 107: cstep++;
   365  0030  3001               	movlw	1
   366  0031  00F5               	movwf	??_move
   367  0032  0875               	movf	??_move,w
   368  0033  07FA               	addwf	_cstep,f
   369                           
   370                           ;main.c: 108: break;
   371  0034  283E               	goto	l614
   372  0035                     l604:	
   373                           ;main.c: 109: case 7: PORTC = 0b00111100;
   374                           
   375  0035  303C               	movlw	60
   376  0036  1283               	bcf	3,5	;RP0=0, select bank0
   377  0037  1303               	bcf	3,6	;RP1=0, select bank0
   378  0038  0087               	movwf	7	;volatile
   379                           
   380                           ;main.c: 110: cstep = 0;
   381  0039  01FA               	clrf	_cstep
   382                           
   383                           ;main.c: 111: break;
   384  003A  283E               	goto	l614
   385  003B                     l608:	
   386                           ;main.c: 112: default: PORTC = 0x00;
   387                           
   388  003B  1283               	bcf	3,5	;RP0=0, select bank0
   389  003C  1303               	bcf	3,6	;RP1=0, select bank0
   390  003D  0187               	clrf	7	;volatile
   391  003E                     l614:	
   392                           ;main.c: 117: }
   393                           
   394                           ;main.c: 113: break;
   395                           
   396                           
   397                           ;main.c: 118: _delay((unsigned long)((20)*(20000000/4000.0)));
   398  003E  3082               	movlw	130
   399  003F  00F6               	movwf	??_move+1
   400  0040  30DD               	movlw	221
   401  0041  00F5               	movwf	??_move
   402  0042                     u117:	
   403  0042  0BF5               	decfsz	??_move,f
   404  0043  2842               	goto	u117
   405  0044  0BF6               	decfsz	??_move+1,f
   406  0045  2842               	goto	u117
   407  0046  2847               	nop2
   408  0047  3001               	movlw	1
   409  0048  00F5               	movwf	??_move
   410  0049  0875               	movf	??_move,w
   411  004A  07F8               	addwf	move@i,f
   412  004B                     l618:	
   413  004B  0877               	movf	move@steps,w
   414  004C  0278               	subwf	move@i,w
   415  004D  1803               	btfsc	3,0
   416  004E  0008               	return
   417  004F  087A               	movf	_cstep,w
   418                           
   419                           ; Switch size 1, requested type "space"
   420                           ; Number of cases is 8, Range of values is 0 to 7
   421                           ; switch strategies available:
   422                           ; Name         Instructions Cycles
   423                           ; simple_byte           25    13 (average)
   424                           ; direct_byte           32     8 (fixed)
   425                           ; jumptable            260     6 (fixed)
   426                           ;	Chosen strategy is simple_byte
   427  0050  3A00               	xorlw	0	; case 0
   428  0051  1903               	skipnz
   429  0052  2820               	goto	l576
   430  0053  3A01               	xorlw	1	; case 1
   431  0054  1903               	skipnz
   432  0055  2822               	goto	l580
   433  0056  3A03               	xorlw	3	; case 2
   434  0057  1903               	skipnz
   435  0058  2824               	goto	l584
   436  0059  3A01               	xorlw	1	; case 3
   437  005A  1903               	skipnz
   438  005B  2826               	goto	l588
   439  005C  3A07               	xorlw	7	; case 4
   440  005D  1903               	skipnz
   441  005E  2828               	goto	l592
   442  005F  3A01               	xorlw	1	; case 5
   443  0060  1903               	skipnz
   444  0061  282A               	goto	l596
   445  0062  3A03               	xorlw	3	; case 6
   446  0063  1903               	skipnz
   447  0064  282C               	goto	l600
   448  0065  3A01               	xorlw	1	; case 7
   449  0066  1903               	skipnz
   450  0067  2835               	goto	l604
   451  0068  283B               	goto	l608
   452  0069  283E               	goto	l614
   453  006A                     __end_of_move:	
   454                           
   455                           	psect	text2
   456  00BA                     __ptext2:	
   457 ;; *************** function _initialise *****************
   458 ;; Defined at:
   459 ;;		line 64 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _initialise
   489  00BA                     _initialise:	
   490                           
   491                           ;main.c: 67: TRISB = 0b00001010;
   492                           
   493                           ;incstack = 0
   494                           ; Regs used in _initialise: [wreg+status,2]
   495  00BA  300A               	movlw	10
   496  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   497  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   498  00BD  0086               	movwf	6	;volatile
   499                           
   500                           ;main.c: 68: TRISC = 0;
   501  00BE  0187               	clrf	7	;volatile
   502                           
   503                           ;main.c: 70: RB0 = 1;
   504  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   505  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   506  00C1  1406               	bsf	6,0	;volatile
   507                           
   508                           ;main.c: 71: RB2 = 1;
   509  00C2  1506               	bsf	6,2	;volatile
   510                           
   511                           ;main.c: 74: TMR0 = 100;
   512  00C3  3064               	movlw	100
   513  00C4  0081               	movwf	1	;volatile
   514                           
   515                           ;main.c: 75: T0CS = 0;
   516  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   517  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   518  00C7  1281               	bcf	1,5	;volatile
   519                           
   520                           ;main.c: 76: T0SE = 0;
   521  00C8  1201               	bcf	1,4	;volatile
   522                           
   523                           ;main.c: 77: PSA = 0;
   524  00C9  1181               	bcf	1,3	;volatile
   525                           
   526                           ;main.c: 78: PS0 = 0;
   527  00CA  1001               	bcf	1,0	;volatile
   528                           
   529                           ;main.c: 79: PS1 = 0;
   530  00CB  1081               	bcf	1,1	;volatile
   531                           
   532                           ;main.c: 80: PS2 = 1;
   533  00CC  1501               	bsf	1,2	;volatile
   534                           
   535                           ;main.c: 82: TMR0IE = 1;
   536  00CD  168B               	bsf	11,5	;volatile
   537                           
   538                           ;main.c: 83: (GIE = 1);
   539  00CE  178B               	bsf	11,7	;volatile
   540  00CF  0008               	return
   541  00D0                     __end_of_initialise:	
   542                           
   543                           	psect	text3
   544  006A                     __ptext3:	
   545 ;; *************** function _isr *****************
   546 ;; Defined at:
   547 ;;		line 32 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          5       0       0       0       0
   564 ;;      Totals:         5       0       0       0       0
   565 ;;Total ram usage:        5 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		Interrupt level 1
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _isr
   576  006A                     _isr:	
   577                           
   578                           ;main.c: 33: if (T0IF){
   579  006A  1D0B               	btfss	11,2	;volatile
   580  006B  288F               	goto	i1l60
   581                           
   582                           ;main.c: 34: T0IF = 0;
   583  006C  110B               	bcf	11,2	;volatile
   584                           
   585                           ;main.c: 35: TMR0 = 100;
   586  006D  3064               	movlw	100
   587  006E  0081               	movwf	1	;volatile
   588                           
   589                           ;main.c: 39: if(!RB1) {
   590  006F  1886               	btfsc	6,1	;volatile
   591  0070  287D               	goto	i1l636
   592                           
   593                           ;main.c: 40: rtcCounter++;
   594  0071  3001               	movlw	1
   595  0072  00F0               	movwf	??_isr
   596  0073  0870               	movf	??_isr,w
   597  0074  07FB               	addwf	_rtcCounter,f	;volatile
   598                           
   599                           ;main.c: 41: if(rtcCounter >10 &&pb0Released){
   600  0075  300B               	movlw	11
   601  0076  027B               	subwf	_rtcCounter,w	;volatile
   602  0077  1803               	btfsc	3,0
   603  0078  1CF9               	btfss	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
   604  0079  287F               	goto	i1l640
   605                           
   606                           ;main.c: 42: pb0Pressed = 1;
   607  007A  1479               	bsf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   608                           
   609                           ;main.c: 43: pb0Released = 0;
   610  007B  10F9               	bcf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
   611                           
   612                           ;main.c: 44: }
   613                           ;main.c: 45: }
   614  007C  287F               	goto	i1l640
   615  007D                     i1l636:	
   616                           
   617                           ;main.c: 46: else{
   618                           ;main.c: 47: rtcCounter = 0;
   619  007D  01FB               	clrf	_rtcCounter	;volatile
   620                           
   621                           ;main.c: 48: pb0Released = 1;
   622  007E  14F9               	bsf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
   623  007F                     i1l640:	
   624                           
   625                           ;main.c: 49: }
   626                           ;main.c: 51: if(!RB3) {
   627  007F  1986               	btfsc	6,3	;volatile
   628  0080  288D               	goto	i1l650
   629                           
   630                           ;main.c: 52: rtcCounter2++;
   631  0081  3001               	movlw	1
   632  0082  00F0               	movwf	??_isr
   633  0083  0870               	movf	??_isr,w
   634  0084  07FC               	addwf	_rtcCounter2,f	;volatile
   635                           
   636                           ;main.c: 53: if(rtcCounter2 >10 &&pb1Released){
   637  0085  300B               	movlw	11
   638  0086  027C               	subwf	_rtcCounter2,w	;volatile
   639  0087  1803               	btfsc	3,0
   640  0088  1DF9               	btfss	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
   641  0089  288F               	goto	i1l60
   642                           
   643                           ;main.c: 54: pb1Pressed = 1;
   644  008A  1579               	bsf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   645                           
   646                           ;main.c: 55: pb1Released = 0;
   647  008B  11F9               	bcf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
   648                           
   649                           ;main.c: 56: }
   650                           ;main.c: 57: }
   651  008C  288F               	goto	i1l60
   652  008D                     i1l650:	
   653                           
   654                           ;main.c: 58: else{
   655                           ;main.c: 59: rtcCounter2 = 0;
   656  008D  01FC               	clrf	_rtcCounter2	;volatile
   657                           
   658                           ;main.c: 60: pb1Released = 1;
   659  008E  15F9               	bsf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
   660  008F                     i1l60:	
   661  008F  0874               	movf	??_isr+4,w
   662  0090  00FF               	movwf	127
   663  0091  0873               	movf	??_isr+3,w
   664  0092  008A               	movwf	10
   665  0093  0872               	movf	??_isr+2,w
   666  0094  0084               	movwf	4
   667  0095  0E71               	swapf	(??_isr+1)^(0+-128),w
   668  0096  0083               	movwf	3
   669  0097  0EFE               	swapf	126,f
   670  0098  0E7E               	swapf	126,w
   671  0099  0009               	retfie
   672  009A                     __end_of_isr:	
   673  007E                     btemp	set	126	;btemp
   674  007E                     wtemp	set	126
   675  007E                     wtemp0	set	126
   676  0080                     wtemp1	set	128
   677  0082                     wtemp2	set	130
   678  0084                     wtemp3	set	132
   679  0086                     wtemp4	set	134
   680  0088                     wtemp5	set	136
   681  007F                     wtemp6	set	127
   682  007E                     ttemp	set	126
   683  007E                     ttemp0	set	126
   684  0081                     ttemp1	set	129
   685  0084                     ttemp2	set	132
   686  0087                     ttemp3	set	135
   687  007F                     ttemp4	set	127
   688  007E                     ltemp	set	126
   689  007E                     ltemp0	set	126
   690  0082                     ltemp1	set	130
   691  0086                     ltemp2	set	134
   692  0080                     ltemp3	set	128
   693                           
   694                           	psect	intentry
   695  0004                     __pintentry:	
   696                           ;incstack = 0
   697                           ; Regs used in _isr: [wreg+status,2+status,0]
   698                           
   699  0004                     interrupt_function:	
   700  007E                     saved_w	set	btemp
   701  0004  00FE               	movwf	btemp
   702  0005  0E03               	swapf	3,w
   703  0006  00F1               	movwf	??_isr+1
   704  0007  0804               	movf	4,w
   705  0008  00F2               	movwf	??_isr+2
   706  0009  080A               	movf	10,w
   707  000A  00F3               	movwf	??_isr+3
   708  000B  1283               	bcf	3,5	;RP0=0, select bank0
   709  000C  1303               	bcf	3,6	;RP1=0, select bank0
   710  000D  087F               	movf	btemp+1,w
   711  000E  00F4               	movwf	??_isr+4
   712  000F  120A  118A  286A   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_move

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                         _initialise
                               _move
 ---------------------------------------------------------------------------------
 (1) _move                                                 4     4      0      30
                                              5 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialise
   _move

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Mar 29 15:52:17 2016

            __CFG_CP$OFF 0000                      l600 002C                      l604 0035  
                    l614 003E                      l608 003B                      l618 004B  
                    l580 0022                      l592 0028                      l584 0024  
                    l576 0020                      l664 00AC                      l656 009F  
                    l596 002A                      l588 0026                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      u117 0042                      _PS0 0408  
                    _PS1 0409                      _PS2 040A             __CFG_CPD$OFF 0000  
                    _PSA 040B                      _isr 006A                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   _T0IF 005A                     _T0CS 040D                     _T0SE 040C  
                   i1l60 008F                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 009A                     _move 001D                     btemp 007E  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_isr 0070                    ?_main 0070  
                  ?_move 0070            __CFG_WDTE$OFF 0000                    i1l640 007F  
                  i1l650 008D                    i1l636 007D                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _cstep 007A  
         __pbitbssCOMMON 03C8           __CFG_BOREN$OFF 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    move@i 0078                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 00BA             __end_of_move 006A  
                 ??_main 0079                   ??_move 0075                   _TMR0IE 005D  
         __CFG_PWRTE$OFF 0000                   saved_w 007E  __end_of__initialization 0019  
         __pcstackCOMMON 0070               _pb0Pressed 03C8               _pb1Pressed 03CA  
             __pmaintext 009A               __pintentry 0004               _initialise 00BA  
                __ptext1 001D                  __ptext2 00BA                  __ptext3 006A  
           __size_of_isr 0030     end_of_initialization 0019               _rtcCounter 007B  
            _pb0Released 03C9              _pb1Released 03CB              ?_initialise 0070  
    start_initialization 0015              __end_of_isr 009A              __pbssCOMMON 007A  
              ___latbits 0002      __size_of_initialise 0016        interrupt_function 0004  
           ??_initialise 0075                move@steps 0077            __size_of_main 0020  
          __size_of_move 004D       __end_of_initialise 00D0                 intlevel1 0000  
            _rtcCounter2 007C  
