

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Mar 29 15:00:25 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0001                     _TMR0	set	1
    74  005F                     _GIE	set	95
    75  0030                     _RB0	set	48
    76  0031                     _RB1	set	49
    77  0032                     _RB2	set	50
    78  0033                     _RB3	set	51
    79  005A                     _T0IF	set	90
    80  005D                     _TMR0IE	set	93
    81  0086                     _TRISB	set	134
    82  0408                     _PS0	set	1032
    83  0409                     _PS1	set	1033
    84  040A                     _PS2	set	1034
    85  040B                     _PSA	set	1035
    86  040D                     _T0CS	set	1037
    87  040C                     _T0SE	set	1036
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  0015                     start_initialization:	
    93  0015                     __initialization:	
    94                           
    95                           ; Clear objects allocated to BITCOMMON
    96  0015  01F5               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    97                           
    98                           ; Clear objects allocated to COMMON
    99  0016  01F6               	clrf	__pbssCOMMON& (0+127)
   100  0017  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   101  0018                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  0018                     __end_of__initialization:	
   105  0018  0183               	clrf	3
   106  0019  120A  118A  2861   	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	bitbssCOMMON
   109  03A8                     __pbitbssCOMMON:	
   110  03A8                     _pb0Pressed:	
   111  03A8                     	ds	1
   112  03A9                     _pb0Released:	
   113  03A9                     	ds	1
   114  03AA                     _pb1Pressed:	
   115  03AA                     	ds	1
   116  03AB                     _pb1Released:	
   117  03AB                     	ds	1
   118                           
   119                           	psect	bssCOMMON
   120  0076                     __pbssCOMMON:	
   121  0076                     _rtcCounter:	
   122  0076                     	ds	1
   123  0077                     _rtcCounter2:	
   124  0077                     	ds	1
   125                           
   126                           	psect	cstackCOMMON
   127  0070                     __pcstackCOMMON:	
   128  0070                     ?_isr:	
   129  0070                     ??_isr:	
   130                           ; 1 bytes @ 0x0
   131                           
   132  0070                     ?_initialise:	
   133                           ; 1 bytes @ 0x0
   134                           
   135  0070                     ?_main:	
   136                           ; 1 bytes @ 0x0
   137                           
   138                           
   139                           ; 1 bytes @ 0x0
   140  0070                     	ds	5
   141  0075                     ??_initialise:	
   142  0075                     ??_main:	
   143                           ; 1 bytes @ 0x5
   144                           
   145                           
   146                           	psect	maintext
   147  0061                     __pmaintext:	
   148                           ; 1 bytes @ 0x5
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 71 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2, status,0, pclath, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : B00/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   168 ;;      Params:         0       0       0       0       0
   169 ;;      Locals:         0       0       0       0       0
   170 ;;      Temps:          0       0       0       0       0
   171 ;;      Totals:         0       0       0       0       0
   172 ;;Total ram usage:        0 bytes
   173 ;; Hardware stack levels required when called:    2
   174 ;; This function calls:
   175 ;;		_initialise
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           
   182                           ;psect for function _main
   183  0061                     _main:	
   184                           
   185                           ;main.c: 73: initialise();
   186                           
   187                           ;incstack = 0
   188                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   189  0061  120A  118A  204C  120A  118A  	fcall	_initialise
   190  0066                     l581:	
   191                           ;main.c: 74: while(1){
   192                           
   193                           
   194                           ;main.c: 75: if(pb0Pressed){
   195  0066  1C75               	btfss	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   196  0067  286D               	goto	l587
   197                           
   198                           ;main.c: 76: RB0 = !RB0;
   199  0068  3001               	movlw	1
   200  0069  1283               	bcf	3,5	;RP0=0, select bank0
   201  006A  1303               	bcf	3,6	;RP1=0, select bank0
   202  006B  0686               	xorwf	6,f
   203                           
   204                           ;main.c: 77: pb0Pressed = 0;
   205  006C  1075               	bcf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   206  006D                     l587:	
   207                           
   208                           ;main.c: 78: }
   209                           ;main.c: 79: if(pb1Pressed){
   210  006D  1D75               	btfss	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   211  006E  2866               	goto	l581
   212                           
   213                           ;main.c: 80: RB2 = !RB2;
   214  006F  3004               	movlw	4
   215  0070  1283               	bcf	3,5	;RP0=0, select bank0
   216  0071  1303               	bcf	3,6	;RP1=0, select bank0
   217  0072  0686               	xorwf	6,f
   218                           
   219                           ;main.c: 81: pb1Pressed = 0;
   220  0073  1175               	bcf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   221  0074  2866               	goto	l581
   222  0075                     __end_of_main:	
   223                           
   224                           	psect	text1
   225  004C                     __ptext1:	
   226 ;; *************** function _initialise *****************
   227 ;; Defined at:
   228 ;;		line 52 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; Hardware stack levels required when called:    1
   249 ;; This function calls:
   250 ;;		Nothing
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _initialise
   258  004C                     _initialise:	
   259                           
   260                           ;main.c: 55: TRISB = 0b00001010;
   261                           
   262                           ;incstack = 0
   263                           ; Regs used in _initialise: [wreg]
   264  004C  300A               	movlw	10
   265  004D  1683               	bsf	3,5	;RP0=1, select bank1
   266  004E  1303               	bcf	3,6	;RP1=0, select bank1
   267  004F  0086               	movwf	6	;volatile
   268                           
   269                           ;main.c: 57: RB0 = 1;
   270  0050  1283               	bcf	3,5	;RP0=0, select bank0
   271  0051  1303               	bcf	3,6	;RP1=0, select bank0
   272  0052  1406               	bsf	6,0	;volatile
   273                           
   274                           ;main.c: 58: RB3 = 1;
   275  0053  1586               	bsf	6,3	;volatile
   276                           
   277                           ;main.c: 60: TMR0 = 100;
   278  0054  3064               	movlw	100
   279  0055  0081               	movwf	1	;volatile
   280                           
   281                           ;main.c: 61: T0CS = 0;
   282  0056  1683               	bsf	3,5	;RP0=1, select bank1
   283  0057  1303               	bcf	3,6	;RP1=0, select bank1
   284  0058  1281               	bcf	1,5	;volatile
   285                           
   286                           ;main.c: 62: T0SE = 0;
   287  0059  1201               	bcf	1,4	;volatile
   288                           
   289                           ;main.c: 63: PSA = 0;
   290  005A  1181               	bcf	1,3	;volatile
   291                           
   292                           ;main.c: 64: PS0 = 0;
   293  005B  1001               	bcf	1,0	;volatile
   294                           
   295                           ;main.c: 65: PS1 = 0;
   296  005C  1081               	bcf	1,1	;volatile
   297                           
   298                           ;main.c: 66: PS2 = 1;
   299  005D  1501               	bsf	1,2	;volatile
   300                           
   301                           ;main.c: 68: TMR0IE = 1;
   302  005E  168B               	bsf	11,5	;volatile
   303                           
   304                           ;main.c: 69: (GIE = 1);
   305  005F  178B               	bsf	11,7	;volatile
   306  0060  0008               	return
   307  0061                     __end_of_initialise:	
   308                           
   309                           	psect	text2
   310  001C                     __ptext2:	
   311 ;; *************** function _isr *****************
   312 ;; Defined at:
   313 ;;		line 20 in file "main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0
   329 ;;      Temps:          5       0       0       0       0
   330 ;;      Totals:         5       0       0       0       0
   331 ;;Total ram usage:        5 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		Interrupt level 1
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           
   341                           ;psect for function _isr
   342  001C                     _isr:	
   343                           
   344                           ;main.c: 21: if (T0IF){
   345  001C  1D0B               	btfss	11,2	;volatile
   346  001D  2841               	goto	i1l52
   347                           
   348                           ;main.c: 22: T0IF = 0;
   349  001E  110B               	bcf	11,2	;volatile
   350                           
   351                           ;main.c: 23: TMR0 = 100;
   352  001F  3064               	movlw	100
   353  0020  0081               	movwf	1	;volatile
   354                           
   355                           ;main.c: 27: if(!RB1) {
   356  0021  1886               	btfsc	6,1	;volatile
   357  0022  282F               	goto	i1l561
   358                           
   359                           ;main.c: 28: rtcCounter++;
   360  0023  3001               	movlw	1
   361  0024  00F0               	movwf	??_isr
   362  0025  0870               	movf	??_isr,w
   363  0026  07F6               	addwf	_rtcCounter,f	;volatile
   364                           
   365                           ;main.c: 29: if(rtcCounter >10 &&pb0Released){
   366  0027  300B               	movlw	11
   367  0028  0276               	subwf	_rtcCounter,w	;volatile
   368  0029  1803               	btfsc	3,0
   369  002A  1CF5               	btfss	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
   370  002B  2831               	goto	i1l565
   371                           
   372                           ;main.c: 30: pb0Pressed = 1;
   373  002C  1475               	bsf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   374                           
   375                           ;main.c: 31: pb0Released = 0;
   376  002D  10F5               	bcf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
   377                           
   378                           ;main.c: 32: }
   379                           ;main.c: 33: }
   380  002E  2831               	goto	i1l565
   381  002F                     i1l561:	
   382                           
   383                           ;main.c: 34: else{
   384                           ;main.c: 35: rtcCounter = 0;
   385  002F  01F6               	clrf	_rtcCounter	;volatile
   386                           
   387                           ;main.c: 36: pb0Released = 1;
   388  0030  14F5               	bsf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
   389  0031                     i1l565:	
   390                           
   391                           ;main.c: 37: }
   392                           ;main.c: 39: if(!RB3) {
   393  0031  1986               	btfsc	6,3	;volatile
   394  0032  283F               	goto	i1l575
   395                           
   396                           ;main.c: 40: rtcCounter2++;
   397  0033  3001               	movlw	1
   398  0034  00F0               	movwf	??_isr
   399  0035  0870               	movf	??_isr,w
   400  0036  07F7               	addwf	_rtcCounter2,f	;volatile
   401                           
   402                           ;main.c: 41: if(rtcCounter2 >10 &&pb1Released){
   403  0037  300B               	movlw	11
   404  0038  0277               	subwf	_rtcCounter2,w	;volatile
   405  0039  1803               	btfsc	3,0
   406  003A  1DF5               	btfss	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
   407  003B  2841               	goto	i1l52
   408                           
   409                           ;main.c: 42: pb1Pressed = 1;
   410  003C  1575               	bsf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   411                           
   412                           ;main.c: 43: pb1Released = 0;
   413  003D  11F5               	bcf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
   414                           
   415                           ;main.c: 44: }
   416                           ;main.c: 45: }
   417  003E  2841               	goto	i1l52
   418  003F                     i1l575:	
   419                           
   420                           ;main.c: 46: else{
   421                           ;main.c: 47: rtcCounter2 = 0;
   422  003F  01F7               	clrf	_rtcCounter2	;volatile
   423                           
   424                           ;main.c: 48: pb1Released = 1;
   425  0040  15F5               	bsf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
   426  0041                     i1l52:	
   427  0041  0874               	movf	??_isr+4,w
   428  0042  00FF               	movwf	127
   429  0043  0873               	movf	??_isr+3,w
   430  0044  008A               	movwf	10
   431  0045  0872               	movf	??_isr+2,w
   432  0046  0084               	movwf	4
   433  0047  0E71               	swapf	(??_isr+1)^(0+-128),w
   434  0048  0083               	movwf	3
   435  0049  0EFE               	swapf	126,f
   436  004A  0E7E               	swapf	126,w
   437  004B  0009               	retfie
   438  004C                     __end_of_isr:	
   439  007E                     btemp	set	126	;btemp
   440  007E                     wtemp	set	126
   441  007E                     wtemp0	set	126
   442  0080                     wtemp1	set	128
   443  0082                     wtemp2	set	130
   444  0084                     wtemp3	set	132
   445  0086                     wtemp4	set	134
   446  0088                     wtemp5	set	136
   447  007F                     wtemp6	set	127
   448  007E                     ttemp	set	126
   449  007E                     ttemp0	set	126
   450  0081                     ttemp1	set	129
   451  0084                     ttemp2	set	132
   452  0087                     ttemp3	set	135
   453  007F                     ttemp4	set	127
   454  007E                     ltemp	set	126
   455  007E                     ltemp0	set	126
   456  0082                     ltemp1	set	130
   457  0086                     ltemp2	set	134
   458  0080                     ltemp3	set	128
   459                           
   460                           	psect	intentry
   461  0004                     __pintentry:	
   462                           ;incstack = 0
   463                           ; Regs used in _isr: [wreg+status,2+status,0]
   464                           
   465  0004                     interrupt_function:	
   466  007E                     saved_w	set	btemp
   467  0004  00FE               	movwf	btemp
   468  0005  0E03               	swapf	3,w
   469  0006  00F1               	movwf	??_isr+1
   470  0007  0804               	movf	4,w
   471  0008  00F2               	movwf	??_isr+2
   472  0009  080A               	movf	10,w
   473  000A  00F3               	movwf	??_isr+3
   474  000B  1283               	bcf	3,5	;RP0=0, select bank0
   475  000C  1303               	bcf	3,6	;RP1=0, select bank0
   476  000D  087F               	movf	btemp+1,w
   477  000E  00F4               	movwf	??_isr+4
   478  000F  120A  118A  281C   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _initialise
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialise

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Mar 29 15:00:25 2016

            __CFG_CP$OFF 0000                      l581 0066                      l587 006D  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _PS0 0408  
                    _PS1 0409                      _PS2 040A             __CFG_CPD$OFF 0000  
                    _PSA 040B                      _isr 001C                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   _T0IF 005A                     _T0CS 040D                     _T0SE 040C  
                   i1l52 0041                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 0061                     btemp 007E                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_isr 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l561 002F                    i1l565 0031                    i1l575 003F  
                  _TRISB 0086           __pbitbssCOMMON 03A8           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0075                   ??_main 0075  
                 _TMR0IE 005D           __CFG_PWRTE$OFF 0000                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070               _pb0Pressed 03A8  
             _pb1Pressed 03AA               __pmaintext 0061               __pintentry 0004  
             _initialise 004C                  __ptext1 004C                  __ptext2 001C  
           __size_of_isr 0030     end_of_initialization 0018               _rtcCounter 0076  
            _pb0Released 03A9              _pb1Released 03AB              ?_initialise 0070  
    start_initialization 0015              __end_of_isr 004C              __pbssCOMMON 0076  
              ___latbits 0002      __size_of_initialise 0015        interrupt_function 0004  
           ??_initialise 0075            __size_of_main 0014       __end_of_initialise 0061  
               intlevel1 0000              _rtcCounter2 0077  
